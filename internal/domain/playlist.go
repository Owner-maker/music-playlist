package domain

import (
	"github.com/google/uuid"
	"time"
)

/*
	- Должен быть описан четко определенный интерфейс для взаимодействия с плейлистом
	- Плейлист должен быть реализован с использованием двусвязного списка.
	- Каждая песня в плейлисте должна иметь свойство Duration.
	- Воспроизведение песни не должно блокировать методы управления.
	- Метод воспроизведения должен начать воспроизведение с длительностью, ограниченной свойством Duration песни.
		Воспроизведение должно эмулироваться длительной операцией.
	- Следующая песня должна воспроизводиться автоматически после окончания текущей песни.
	- Метод Pause должен приостановить текущее воспроизведение, и когда
		воспроизведение вызывается снова, оно должно продолжаться с момента паузы.
	- Метод AddSong должен добавить новую песню в конец списка.
	- Вызов метода Next должен начать воспроизведение следующей песни. Таким образом текущее
		воспроизведение должно быть остановлено и начато воспроизведение следующей песни
	- Вызов метода Prev должен остановить текущее воспроизведение и начать воспроизведение предыдущей песни.
	- Реализация метода AddSong должна проводиться с учетом одновременного, конкурентного доступа.
	- Следует учитывать, что воспроизведение может быть остановлено извне
	- Реализация методов Next/Prev должна проводиться с учетом одновременного, конкурентного доступа.
	- Примечание: Все реализации должны быть тщательно протестированы и оптимизированы с точки зрения производительности.
*/

type Playlist struct {
	Start *Node
}

type Node struct {
	next *Node
	prev *Node
	data Song
}

type Song struct {
	ID       uuid.UUID
	Name     string
	Duration time.Duration
}

type MusicService interface {
	Play()                   // Play начинает воспроизведение текущей песни
	Pause()                  // Pause приостанавливает воспроизведение
	AddSong(s Song)          // AddSong добавляет в конец плейлиста песню 	*
	RemoveSong(id uuid.UUID) // RemoveSong удаляют необходимую песню
	Next()                   // Next воспроизводит следующую песню 		*
	Prev()                   // Prev воспроизводит предыдущую песню 		*
}
